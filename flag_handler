#!/bin/bash

# deal with the flags

# possible flags:
# -f pattern for files
# -t pattern for tests
# -e pattern for expected
# -d project directory
# -j for tests in json

# finished flags:
# -c for compiler
# -a for adding flags
# -r to remove a flag
# -x for remove all
# -l for listing the flags
# -h for help
# -v for not using valgrind


GREEN='\033[0;32m'
RED='\033[0;31m'
NC='\033[0m'

proj_dir="$HOME/.gradescope"
defaults="$HOME/.defaults"
#get the default compiler and flags
compiler=$(grep "compiler: " "$defaults" | sed 's/compiler: //')
flags=$(grep "^flag:" "$defaults" | cut -d ' ' -f 2-)
valgrind="true"
comp_dir=""

while getopts "c:r:xa:hld:v" opt; do
  case $opt in
    c)
      compiler="$OPTARG"
      ;;
    a)
      echo "flag: $OPTARG" >> "$defaults"
      flags=$(grep "^flag:" "$defaults" | cut -d ' ' -f 2-)
      ;;
    r)
      echo "compiler: $compiler" > "$defaults"
      echo "$flags" | while read -r flag; do
        if [ "$flag" != "$OPTARG" ]; then
          echo "flag: $flag" >> "$defaults"
        fi
      done
      flags=$(grep "^flag:" "$defaults" | cut -d ' ' -f 2-)
      ;;
    x)
      echo "compiler: $compiler" > "$defaults"
      flags=""
      ;;
    l)
      if [ "$flags" ]; then
        echo "$flags"
      else
        echo "no flags"
      fi
      ;;
    h)
      echo "kill yourself"
      ;;
    v)
      valgrind="false"
      ;;
    d)
      if [ -e "$OPTARG" ]; then
        if [[ "$OPTARG" == *.c || "$OPTARG" == *.cpp ]]; then
          comp_dir="$OPTARG"
        else
          echo -e "$RED""File exists but does not end in .c or .cpp." "$NC"
          exit
        fi
      else
        echo -e "$RED" "File does not exist." "$NC"
        exit
      fi
      echo "$comp_dir"
      ;;
    \?)
      echo -e "$RED" "Invalid option: -$OPTARG" "$NC"
      exit 1
      ;;
  esac
done

# save the compiler and flags
echo "compiler: $compiler" > "$defaults"
echo "$flags" | while read -r flag; do
  if [ -n "$flag" ]; then
    echo "flag: $flag" >> "$defaults"
  fi
done

#COMPILATION WOOOOOO
comp_flags=""
if [ "$valgrind" == "true" ]; then
  comp_flags+=" -v"
fi
if [ "$comp_dir" ]; then
  comp_flags+=" -d $comp_dir"
  echo "$comp_dir"
fi
"$proj_dir/compilation" "$comp_flags"
